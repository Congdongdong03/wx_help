generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model admin_user {
  id            Int     @id @default(autoincrement())
  username      String  @unique
  password_hash String
  role          String? @default("admin")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model category {
  id   Int    @id @default(autoincrement())
  name String
  code String
}

model cities {
  id         Int      @id @default(autoincrement())
  name       String
  code       String   @unique
  is_hot     Boolean? @default(false)
  sort_order Int?     @default(0)
  is_active  Boolean? @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model favorite {
  id         Int      @id @default(autoincrement())
  user_id    Int
  post_id    Int
  created_at DateTime @default(now())
  users      users    @relation(fields: [user_id], references: [id])
  posts      posts    @relation(fields: [post_id], references: [id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model feedback {
  id         Int      @id @default(autoincrement())
  user_id    Int
  content    String
  image      String?
  type       String?  @default("advice")
  status     Int?     @default(0)
  created_at DateTime @default(now())
  users      users    @relation(fields: [user_id], references: [id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model polish_log {
  id          Int      @id @default(autoincrement())
  user_id     Int
  post_id     Int
  polished_at DateTime @default(now())
  users       users    @relation(fields: [user_id], references: [id])
  posts       posts    @relation(fields: [post_id], references: [id])
}

model posts {
  id               Int            @id @default(autoincrement())
  user_id          Int
  title            String
  content          String?
  contact_info     String?
  images           String?
  category         String?
  sub_category     String?
  city_code        String?
  price            String?
  price_unit       String?
  status           String?        @default("pending")
  review_status    String?        @default("pending")
  review_note      String?
  sensitive_words  String?
  last_polished_at DateTime       @default(now())
  view_count       Int?           @default(0)
  favorite_count   Int?           @default(0)
  recommend_score  String?        @default("0")
  quality_score    String?        @default("0")
  pinned_until     DateTime?
  is_pinned        Boolean?       @default(false)
  expires_at       DateTime?
  created_at       DateTime       @default(now())
  updated_at       DateTime       @default(now())
  conversations    Conversation[]
  favorite         favorite[]
  polish_log       polish_log[]
  users            users          @relation(fields: [user_id], references: [id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  id            Int          @id @default(autoincrement())
  username      String       @unique
  openid        String?      @unique
  unionid       String?
  session_key   String?
  nickname      String?
  avatar_url    String?
  phone         String?
  email         String?
  gender        Int?
  city          String?
  province      String?
  country       String?
  language      String?      @default("zh_CN")
  status        String?      @default("active")
  last_login_at DateTime?
  created_at    DateTime     @default(now())
  updated_at    DateTime     @default(now())
  favorite      favorite[]
  feedback      feedback[]
  polish_log    polish_log[]
  posts         posts[]
}

model weekly_deals {
  id              Int      @id @default(autoincrement())
  title           String   @default("WWS/Coles 每周特价打折商品")
  image_url       String?
  week_start_date DateTime
  is_active       Boolean  @default(true)
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now())
}

model catalogue_images {
  id          Int      @id @default(autoincrement())
  store_name  String
  page_number Int
  image_data  String
  week_date   DateTime
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
}

model ValidationRule {
  id         Int      @id @default(autoincrement())
  table_name String
  field_name String
  rule_type  String
  rule_value String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model SystemConfig {
  id          Int      @id @default(autoincrement())
  key         String   @unique
  value       String
  description String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Conversation {
  id             String    @id @default(cuid())
  postId         Int
  participant1Id String
  participant2Id String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  post           posts     @relation(fields: [postId], references: [id])
  messages       Message[]
}

model Message {
  id             String       @id @default(cuid())
  conversationId String
  senderId       String
  receiverId     String
  type           String       @default("text")
  content        String
  isRead         Boolean      @default(false)
  createdAt      DateTime     @default(now())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
}

model sensitive_word {
  id        Int      @id @default(autoincrement())
  word      String
  category  String
  createdAt DateTime @default(now())

  @@unique([word, category], name: "word_category")
}

model statistics_snapshot {
  id           Int      @id @default(autoincrement())
  date         DateTime
  period_type  String
  metric_name  String
  metric_value Float
  metadata     String?
  created_at   DateTime @default(now())

  @@unique([date, period_type, metric_name], name: "unique_statistic")
  @@index([date, period_type])
  @@index([metric_name])
}

model statistics_config {
  id           Int      @id @default(autoincrement())
  metric_name  String   @unique
  display_name String
  description  String?
  unit         String?
  category     String
  is_active    Boolean  @default(true)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model user_behavior_stats {
  id          Int      @id @default(autoincrement())
  user_id     Int
  action_type String
  target_type String?
  target_id   Int?
  metadata    String?
  created_at  DateTime @default(now())

  @@index([user_id, action_type])
  @@index([created_at])
  @@index([action_type, created_at])
}
